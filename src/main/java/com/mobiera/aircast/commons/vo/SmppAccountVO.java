// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: ValueObject.vsl in andromda-java-cartridge.
//
package com.mobiera.aircast.commons.vo;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.mobiera.aircast.commons.enums.SmppSmsIdFormat;
import com.mobiera.commons.vo.CommonVO;

/**
 * 
 */
@JsonInclude(Include.NON_NULL)
public class SmppAccountVO
    implements CommonVO
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 2183091215482715174L;
	private String sleepyIncomingShortcode;
	private String sleepyOutgoingShortcode;
	private SmppSmsIdFormat smppSmsIdFormat;
    public SmppAccountVO()
    {
    }

    public SmppAccountVO(java.lang.Integer connectTimeout, java.lang.Integer requestExpiryTimeout, java.lang.Integer windowMonitorInterval)
    {
        this.connectTimeout = connectTimeout;
        this.requestExpiryTimeout = requestExpiryTimeout;
        this.windowMonitorInterval = windowMonitorInterval;
    }

    public SmppAccountVO(java.lang.Long id, java.lang.Boolean active, java.lang.String name, java.lang.String ip, String port, java.lang.String systemId, java.lang.String password, java.lang.Integer srcTon, java.lang.Integer srcNpi, java.lang.Integer destTon, java.lang.Integer destNpi,
    		java.lang.Integer effectiveTps, java.lang.Short effectiveOutboundConnexionSize, java.lang.String maxConnexionSize, java.lang.Integer windowSize, java.lang.Integer connectTimeout, java.lang.Integer requestExpiryTimeout, java.lang.Integer windowMonitorInterval, java.lang.String systemType, java.lang.String addressRange, String bindType, java.lang.Boolean useDlr, String defaultAlphabetCharsetName,
    		String sleepyIncomingShortcode, String sleepyOutgoingShortcode, SmppSmsIdFormat smppSmsIdFormat)
    {
        this.id = id;
        this.active = active;
        this.name = name;
        this.ip = ip;
        this.port = port;
        this.systemId = systemId;
        this.password = password;
        this.srcTon = srcTon;
        this.srcNpi = srcNpi;
        this.destTon = destTon;
        this.destNpi = destNpi;
        this.effectiveTps = effectiveTps;
        this.effectiveOutboundConnexionSize = effectiveOutboundConnexionSize;
        this.maxConnexionSize = maxConnexionSize;
        this.windowSize = windowSize;
        this.connectTimeout = connectTimeout;
        this.requestExpiryTimeout = requestExpiryTimeout;
        this.windowMonitorInterval = windowMonitorInterval;
        this.systemType = systemType;
        this.addressRange = addressRange;
        this.bindType = bindType;
        this.useDlr = useDlr;
        this.defaultAlphabetCharsetName = defaultAlphabetCharsetName;
        this.sleepyIncomingShortcode = sleepyIncomingShortcode;
        this.sleepyOutgoingShortcode = sleepyOutgoingShortcode;
    	this.smppSmsIdFormat = smppSmsIdFormat;
    	
    }

    /**
     * Copies constructor from other SmppAccountVO
     *
     * @param otherBean, cannot be <code>null</code>
     * @throws java.lang.NullPointerException if the argument is <code>null</code>
     */
    public SmppAccountVO(SmppAccountVO otherBean)
    {
        this(otherBean.getId(), otherBean.getActive(), otherBean.getName(),
        		otherBean.getIp(), otherBean.getPort(), otherBean.getSystemId(),
        		otherBean.getPassword(), otherBean.getSrcTon(), otherBean.getSrcNpi(),
        		otherBean.getDestTon(), otherBean.getDestNpi(), otherBean.getEffectiveTps(), otherBean.getEffectiveOutboundConnexionSize(),
        		otherBean.getMaxConnexionSize(), otherBean.getWindowSize(), otherBean.getConnectTimeout(),
        		otherBean.getRequestExpiryTimeout(), otherBean.getWindowMonitorInterval(),
        		otherBean.getSystemType(), otherBean.getAddressRange(), otherBean.getBindType(),
        		otherBean.getUseDlr(), otherBean.getDefaultAlphabetCharsetName(), otherBean.getSleepyIncomingShortcode(), otherBean.getSleepyOutgoingShortcode(), otherBean.getSmppSmsIdFormat());
    }

    /**
     * Copies all properties from the argument value object into this value object.
     */
    public void copy(SmppAccountVO otherBean)
    {
        if (otherBean != null)
        {
            this.setId(otherBean.getId());
            this.setActive(otherBean.getActive());
            this.setName(otherBean.getName());
            this.setIp(otherBean.getIp());
            this.setPort(otherBean.getPort());
            this.setSystemId(otherBean.getSystemId());
            this.setPassword(otherBean.getPassword());
            this.setSrcTon(otherBean.getSrcTon());
            this.setSrcNpi(otherBean.getSrcNpi());
            this.setDestTon(otherBean.getDestTon());
            this.setDestNpi(otherBean.getDestNpi());
            this.setEffectiveTps(otherBean.getEffectiveTps());
            this.setEffectiveOutboundConnexionSize(otherBean.getEffectiveOutboundConnexionSize());
            this.setMaxConnexionSize(otherBean.getMaxConnexionSize());
            this.setWindowSize(otherBean.getWindowSize());
            this.setConnectTimeout(otherBean.getConnectTimeout());
            this.setRequestExpiryTimeout(otherBean.getRequestExpiryTimeout());
            this.setWindowMonitorInterval(otherBean.getWindowMonitorInterval());
            this.setSystemType(otherBean.getSystemType());
            this.setAddressRange(otherBean.getAddressRange());
            this.setBindType(otherBean.getBindType());
            this.setUseDlr(otherBean.getUseDlr());
            this.setDefaultAlphabetCharsetName(otherBean.getDefaultAlphabetCharsetName());
            this.setSleepyIncomingShortcode(otherBean.getSleepyIncomingShortcode());
            this.setSleepyOutgoingShortcode(otherBean.getSleepyOutgoingShortcode());
            this.setSmppSmsIdFormat(otherBean.getSmppSmsIdFormat());
           
        }
    }

    
    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private java.lang.Boolean active;

    /**
     * 
     */
    public java.lang.Boolean getActive()
    {
        return this.active;
    }

    public void setActive(java.lang.Boolean active)
    {
        this.active = active;
    }

    private java.lang.String name;

    /**
     * 
     */
    public java.lang.String getName()
    {
        return this.name;
    }

    public void setName(java.lang.String name)
    {
        this.name = name;
    }

    private java.lang.String ip;

    /**
     * 
     */
    public java.lang.String getIp()
    {
        return this.ip;
    }

    public void setIp(java.lang.String ip)
    {
        this.ip = ip;
    }

    private String port;

    /**
     * 
     */
    public String getPort()
    {
        return this.port;
    }

    public void setPort(String port)
    {
        this.port = port;
    }

    private java.lang.String systemId;

    /**
     * 
     */
    public java.lang.String getSystemId()
    {
        return this.systemId;
    }

    public void setSystemId(java.lang.String systemId)
    {
        this.systemId = systemId;
    }

    private java.lang.String password;

    /**
     * 
     */
    public java.lang.String getPassword()
    {
        return this.password;
    }

    public void setPassword(java.lang.String password)
    {
        this.password = password;
    }

    private java.lang.Integer srcTon = 1;

    /**
     * 
     */
    public java.lang.Integer getSrcTon()
    {
        return this.srcTon;
    }

    public void setSrcTon(java.lang.Integer srcTon)
    {
        this.srcTon = srcTon;
    }

    private java.lang.Integer srcNpi = 1;

    /**
     * 
     */
    public java.lang.Integer getSrcNpi()
    {
        return this.srcNpi;
    }

    public void setSrcNpi(java.lang.Integer srcNpi)
    {
        this.srcNpi = srcNpi;
    }

    private java.lang.Integer destTon = 1;

    /**
     * 
     */
    public java.lang.Integer getDestTon()
    {
        return this.destTon;
    }

    public void setDestTon(java.lang.Integer destTon)
    {
        this.destTon = destTon;
    }

    private java.lang.Integer destNpi = 1;

    /**
     * 
     */
    public java.lang.Integer getDestNpi()
    {
        return this.destNpi;
    }

    public void setDestNpi(java.lang.Integer destNpi)
    {
        this.destNpi = destNpi;
    }

    private java.lang.Integer effectiveTps = 1;

    /**
     * 
     */
    public java.lang.Integer getEffectiveTps()
    {
        return this.effectiveTps;
    }

    public void setEffectiveTps(java.lang.Integer effectiveTps)
    {
        this.effectiveTps = effectiveTps;
    }

    private Short effectiveOutboundConnexionSize;
    
    
    public final Short getEffectiveOutboundConnexionSize() {
		return effectiveOutboundConnexionSize;
	}

	public final void setEffectiveOutboundConnexionSize(Short short1) {
		this.effectiveOutboundConnexionSize = short1;
	}


	private java.lang.String maxConnexionSize;

    /**
     * 
     */
    public java.lang.String getMaxConnexionSize()
    {
        return this.maxConnexionSize;
    }

    public void setMaxConnexionSize(java.lang.String maxConnexionSize)
    {
        this.maxConnexionSize = maxConnexionSize;
    }

    private java.lang.Integer windowSize = 20;

    /**
     * 
     */
    public java.lang.Integer getWindowSize()
    {
        return this.windowSize;
    }

    public void setWindowSize(java.lang.Integer windowSize)
    {
        this.windowSize = windowSize;
    }

    private java.lang.Integer connectTimeout = 10000;

    /**
     * 
     */
    public java.lang.Integer getConnectTimeout()
    {
        return this.connectTimeout;
    }

    public void setConnectTimeout(java.lang.Integer connectTimeout)
    {
        this.connectTimeout = connectTimeout;
    }

    private java.lang.Integer requestExpiryTimeout = 10000;

    /**
     * 
     */
    public java.lang.Integer getRequestExpiryTimeout()
    {
        return this.requestExpiryTimeout;
    }

    public void setRequestExpiryTimeout(java.lang.Integer requestExpiryTimeout)
    {
        this.requestExpiryTimeout = requestExpiryTimeout;
    }

    private java.lang.Integer windowMonitorInterval = 10000;

    /**
     * 
     */
    public java.lang.Integer getWindowMonitorInterval()
    {
        return this.windowMonitorInterval;
    }

    public void setWindowMonitorInterval(java.lang.Integer windowMonitorInterval)
    {
        this.windowMonitorInterval = windowMonitorInterval;
    }

    private java.lang.String systemType;

    /**
     * 
     */
    public java.lang.String getSystemType()
    {
        return this.systemType;
    }

    public void setSystemType(java.lang.String systemType)
    {
        this.systemType = systemType;
    }

    private java.lang.String addressRange;

    /**
     * 
     */
    public java.lang.String getAddressRange()
    {
        return this.addressRange;
    }

    public void setAddressRange(java.lang.String addressRange)
    {
        this.addressRange = addressRange;
    }

    private String bindType;

    /**
     * 
     */
    public String getBindType()
    {
        return this.bindType;
    }

    public void setBindType(String bindType)
    {
        this.bindType = bindType;
    }

    private java.lang.Boolean useDlr = Boolean.FALSE;

    /**
     * 
     */
    public java.lang.Boolean getUseDlr()
    {
        return this.useDlr;
    }

    public void setUseDlr(java.lang.Boolean useDlr)
    {
        this.useDlr = useDlr;
    }
    
    private String defaultAlphabetCharsetName;

	public String getDefaultAlphabetCharsetName() {
		return defaultAlphabetCharsetName;
	}

	public void setDefaultAlphabetCharsetName(String defaultAlphabetCharsetName) {
		this.defaultAlphabetCharsetName = defaultAlphabetCharsetName;
	}

	public String getSleepyIncomingShortcode() {
		return sleepyIncomingShortcode;
	}

	public void setSleepyIncomingShortcode(String sleepyIncomingShortcode) {
		this.sleepyIncomingShortcode = sleepyIncomingShortcode;
	}

	public String getSleepyOutgoingShortcode() {
		return sleepyOutgoingShortcode;
	}

	public void setSleepyOutgoingShortcode(String sleepyOutgoingShortcode) {
		this.sleepyOutgoingShortcode = sleepyOutgoingShortcode;
	}

	public SmppSmsIdFormat getSmppSmsIdFormat() {
		return smppSmsIdFormat;
	}

	public void setSmppSmsIdFormat(SmppSmsIdFormat smppSmsIdFormat) {
		this.smppSmsIdFormat = smppSmsIdFormat;
	}
	

	
    // org.uche.miniota.service.SmppAccountVO value-object java merge-point
}